#!/usr/bin/python3.11

import sys, os
from beavor.MainWindow import MainWindow, Settings
from beavor.backend import DatabaseManager

from tkinter import Tk
import asyncio

DEFAULT_DATABASE_PATH = "worklist.db"
DEFAULT_SETTINGS_PATH = "settings.json"

# Runs tkinter events from within the asyncio loop
async def tk_update(root: Tk):
    while True:
        root.update()
        await asyncio.sleep(0.01) # Sleep for a short duration to yield control to the event loop

def main():
    beavor: MainWindow

    # Create settings file if it doesn't exist
    if not os.path.isfile(DEFAULT_SETTINGS_PATH):
        Settings.create_new(DEFAULT_SETTINGS_PATH)

    if len(sys.argv) > 1:
        beavor = MainWindow(sys.argv[1], DEFAULT_SETTINGS_PATH)
    elif os.path.isfile(DEFAULT_DATABASE_PATH):
        #default
        beavor = MainWindow(DEFAULT_DATABASE_PATH, DEFAULT_SETTINGS_PATH)
    else:
        print(f"No database found and none specified.\nCreating new {DEFAULT_DATABASE_PATH}")
        DatabaseManager.create_new_database(DEFAULT_DATABASE_PATH)
        beavor = MainWindow(DEFAULT_DATABASE_PATH, DEFAULT_SETTINGS_PATH)

    # Get asyncio event loop
    loop = asyncio.get_event_loop()

    # Create callback to kill event loop and close application when tkinter window closed
    beavor.root.protocol("WM_DELETE_WINDOW", lambda: loop.stop())

    # Run tkinter within the asyncio event loop
    loop.create_task(tk_update(beavor.root))
    loop.run_forever()

if __name__ == "__main__":
    main()
